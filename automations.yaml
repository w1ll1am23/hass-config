
##########################################
###############Time Automations###########
##########################################

  - alias: turtle morning
    trigger:
      - platform: time
        at: '09:00:00'
    action:
      service: homeassistant.turn_on
      entity_id: script.turtle_morning

  - alias: turtle night
    trigger:
      - platform: time
        at: '22:00:00'
    action:
      service: homeassistant.turn_on
      entity_id: script.turtle_night

  - alias: good morning
    trigger:
      - platform: time
        at: '06:30:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.workday_sensor
          state: 'on'
    action:
      service: homeassistant.turn_on
      entity_id: script.good_morning


  # 7776000 = 90 days
  - alias: filter change reminder
    trigger:
      platform: time
      at: '18:30:00'
    condition:
      condition: and
      conditions:
      - condition: template
        value_template: '{{ as_timestamp(now()) > (states.input_datetime.hvac_filter_install_date.attributes.timestamp + 7776000) }}'
    action:
      - service: notify.sms_billy
        data:
          message: >
            HVAC filter needs replaced
      - service: persistent_notification.create
        data_template:
          title: HVAC filter needs replaced
          message: >
            Replace filter

  # 3888000 = 45 days
  - alias: filter change reminder
    trigger:
      platform: time
      at: '18:30:00'
    condition:
      condition: and
      conditions:
      - condition: template
        value_template: '{{ as_timestamp(now()) > (states.input_datetime.hvac_filter_install_date.attributes.timestamp + 7776000) }}'
    action:
      - service: notify.sms_billy
        data:
          message: >
            HVAC filter needs rotated
      - service: persistent_notification.create
        data_template:
          title: HVAC filter needs replaced
          message: >
            HVAC filter needs rotated

  - alias: turn off entry light if on for 5 minutes
    trigger:
      - platform: state
        entity_id: switch.entry_light
        to: 'on'
        for:
          minutes: 5
    action:
      service: homeassistant.turn_off
      entity_id: switch.entry_light

  - alias: turn off outside lights if on for 15 minutes
    trigger:
      - platform: state
        entity_id: switch.outside_lights
        to: 'on'
        for:
          minutes: 15
    action:
      service: homeassistant.turn_off
      entity_id: switch.outside_lights

  - alias: dim bathroom lights at night
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_door_opened
        to: 'off'
    condition:
      condition: or
      conditions:
        - condition: time
          after: '21:30:00'
        - condition: time
          before: '06:00:00'
    action:
      service: homeassistant.turn_on
      entity_id: script.dim_bathroom_lights

  - alias: bathroom light script on
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: light.bathroom_light
          state: 'on'
    action:
      - service: homeassistant.turn_off
        entity_id: script.bathroom_lights
      - service: homeassistant.turn_on
        entity_id: script.bathroom_lights

  - alias: close garage if open for more than 15 minutes
    trigger:
      - platform: state
        entity_id: cover.garage_door
        to: 'open'
        for:
          minutes: 15
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.on_vacation
          state: 'off'
    action:
      service: cover.close_cover
      entity_id: cover.garage_door

  - alias: notify garage is open for more than 15 minutes
    trigger:
      - platform: state
        entity_id: cover.garage_door
        to: 'open'
        for:
          minutes: 15
    action:
      - service: notify.sms_billy
        data:
          message: >
            Garage is open!


  - alias: office lights off after 5 minutes during work week in morning
    trigger:
      - platform: state
        entity_id: group.office_lights
        to: 'on'
        for:
          minutes: 5
    condition:
      condition: and
      conditions:
        - condition: time
          after: '06:00:00'
        - condition: time
          before: '09:30:00'
        - condition: state
          entity_id: binary_sensor.workday_sensor
          state: 'on'
        - condition: state
          entity_id: device_tracker.w1ll1am_oneplus5t
          state: 'not_home'
        - condition: state
          entity_id: device_tracker.melinas_iphone
          state: 'not_home'
    action:
      - service: homeassistant.turn_off
        entity_id: light.office_lamp
      - service: homeassistant.turn_off
        entity_id: switch.power_strip

  - alias: garage light off after 30 minutes
    trigger:
      - platform: state
        entity_id: group.garage_lights
        to: 'on'
        for:
          minutes: 30
    action:
      service: homeassistant.turn_off
      entity_id: group.garage_lights

  - alias: closet light off after 10 minutes
    trigger:
      - platform: state
        entity_id: light.closet
        to: 'on'
        for:
          minutes: 10
    action:
      service: homeassistant.turn_off
      entity_id: light.closet

  - alias: turn outside lights off
    trigger:
      - platform: sun
        event: sunrise
      - platform: time
        hours: 22
        minutes: 30
        seconds: 0
      - platform: event
        event_type: toggle_outside_lights
    action:
      - service: homeassistant.turn_off
        entity_id: switch.outside_lights
      - service: homeassistant.turn_off
        entity_id: switch.outside_christmas_lights

  - alias: turn on living room lamp at dusk
    trigger:
      - platform: template
        value_template: '{{ states.sun.sun.attributes.elevation < 6.0 }}'
    condition:
        condition: and
        conditions:
          - condition: state
            entity_id: group.us
            state: home
    action:
      - service: homeassistant.turn_on
        entity_id: light.shelf_lamp
      - service: homeassistant.turn_on
        entity_id: script.christmas_tree

  - alias: turn on christmas lights at dusk
    trigger:
      - platform: template
        value_template: '{{ states.sun.sun.attributes.elevation < 4.0 }}'
    action:
      - service: homeassistant.turn_on
        entity_id: switch.outside_christmas_lights

#########################################
##############Sensor Automations#########
#########################################

  - alias: line cross notification
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door_field_detection
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.front_door_opened
          state: 'off'
    action:
      - service: notify.sms_billy
        data:
          message: 'Someone is at the door'
      - service: notify.ios_melinas_iphone
        data:
          message: 'Someone is at the door'

  - alias: line cross lights on
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door_field_detection
        to: 'on'
    condition:
      - condition: template
        value_template: '{{ states.sun.sun.attributes.elevation < 2.5 }}'
    action:
      - service: homeassistant.turn_on
        entity_id: switch.entry
      - service: homeassistant.turn_on
        entity_id: switch.outside_lights

  - alias: stairs motion hallway lights on
    trigger:
      - platform: state
        entity_id: binary_sensor.stairs_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: light.ceiling_fan
          state: 'off'
    action:
      - service: light.turn_on
        entity_id: light.ceiling_fan
      - service: homeassistant.turn_on
        entity_id: switch.upstairs_hallway

  - alias: ceiling fan lights off after 5 minutes
    trigger:
      - platform: state
        entity_id: light.ceiling_fan
        to: 'on'
        for:
          minutes: 5
    action:
      service: light.turn_off
      entity_id: light.ceiling_fan

  - alias: hallway light off after 5 minutes
    trigger:
      - platform: state
        entity_id: switch.upstairs_hallway
        to: 'on'
        for:
          minutes: 5
    action:
      service: homeassistant.turn_off
      entity_id: switch.upstairs_hallway

  - alias: bedroom lights off if no upstairs motion
    trigger:
      platform: state
      entity_id: group.upstairs_motion
      to: 'off'
      for:
        minutes: 15
    condition:
      condition: and
      conditions:
        - condition: time
          after: '07:30:00'
    action:
      - service: homeassistant.turn_off
        entity_id: group.bedroom_lights

  - alias: lights off when coffee is done
    trigger:
      platform: state
      entity_id: switch.keurig
      to: 'off'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.workday_sensor
          state: 'on'
    action:
      - service: homeassistant.turn_off
        entity_id: light.kitchen_light
      - service: homeassistant.turn_off
        entity_id: light.billys_nightstand

  - alias: turn living room tv off
    trigger:
      platform: state
      entity_id: media_player.living_room
      to: 'off'
      for:
        minutes: 15
    condition:
      condition: and
      conditions:
          - condition: state
            entity_id: binary_sensor.living_room_tv
            state: 'on'
    action:
      service: homeassistant.turn_off
      entity_id: switch.living_room_tv_power

  - alias: bathroom door opened bedtime
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_door_opened
        from: 'off'
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '21:30:00'
        - condition: time
          before: '22:30:00'
        - condition: state
          entity_id: light.bathroom_light
          state: 'off'
    action:
      service: light.turn_on
      entity_id: light.bathroom_light
      data:
        brightness: 25

  - alias: bathroom door opened at morning
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_door_opened
        from: 'off'
        to: 'on'
    condition:
      condition: or
      conditions:
        - condition: time
          before: '06:00:00'
        - condition: time
          after: '22:30:00'
        - condition: state
          entity_id: light.bathroom_light
          state: 'off'
    action:
      service: light.turn_on
      entity_id: light.bathroom_light_4
      data:
        brightness: 10

  - alias: bathroom door opened
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_door_opened
        from: 'off'
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '06:00:00'
        - condition: time
          before: '22:30:00'
        - condition: state
          entity_id: light.bathroom_light
          state: 'off'
    action:
      service: light.turn_on
      entity_id: light.bathroom_light
      data:
        brightness: 255

  - alias: turn office lights on when motion detected
    trigger:
      - platform: state
        entity_id: binary_sensor.office_motion
        from: 'off'
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: group.office_lights
          state: 'off'
        - condition: state
          entity_id: binary_sensor.up_stairs_hallway_motion
          state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: switch.power_strip
      - service: homeassistant.turn_on
        entity_id: light.office_lamp

  - alias: hallway motion at night
    trigger:
      - platform: state
        entity_id: binary_sensor.up_stairs_hallway_motion
        from: 'off'
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '20:00:00'
        - condition: time
          before: '22:30:00'
        - condition: state
          entity_id: group.bedroom_lights
          state: 'off'
    action:
      service: homeassistant.turn_on
      entity_id: light.bedroom_lamp

  - alias: dining room fan on
    trigger:
      platform: state
      entity_id: binary_sensor.wink_relay_downstairss_bottom_button
      from: 'off'
      to: 'on'
    condition:
      condition: state
      entity_id: fan.dining_room_fan
      state: 'off'
    action:
      - service: homeassistant.turn_on
        entity_id: fan.dining_room_fan

  - alias: dining room fan off
    trigger:
      platform: state
      entity_id: binary_sensor.wink_relay_downstairss_bottom_button
      from: 'off'
      to: 'on'
    condition:
      condition: state
      entity_id: fan.dining_room_fan
      state: 'on'
    action:
      - service: homeassistant.turn_off
        entity_id: fan.dining_room_fan

  - alias: dining room fan light on
    trigger:
      platform: state
      entity_id: binary_sensor.wink_relay_downstairss_top_button
      from: 'off'
      to: 'on'
    condition:
      condition: state
      entity_id: light.dining_room_fan_light
      state: 'off'
    action:
      - service: homeassistant.turn_on
        entity_id: light.dining_room_fan_light

  - alias: dining room fan light off
    trigger:
      platform: state
      entity_id: binary_sensor.wink_relay_downstairss_top_button
      from: 'off'
      to: 'on'
    condition:
      condition: state
      entity_id: light.dining_room_fan_light
      state: 'on'
    action:
      - service: homeassistant.turn_off
        entity_id: light.dining_room_fan_light

  # - alias: office lights on remote
  #   trigger:
  #     platform: template
  #     value_template: "{{ is_state_attr('binary_sensor.remote', 'button_on_pressed', True)}}"
  #   action:
  #     - service: homeassistant.turn_on
  #       entity_id: light.office_lamp
  #     - service: homeassistant.turn_on
  #       entity_id: switch.power_strip

  - alias: office lights off hallway relay
    trigger:
      platform: state
      entity_id: binary_sensor.wink_relay_upstairss_bottom_button
      to: 'on'
    action:
      - service: homeassistant.turn_off
        entity_id: light.office_lamp
      - service: homeassistant.turn_off
        entity_id: switch.power_strip

  - alias: dryer started
    trigger:
      platform: state
      entity_id: binary_sensor.spotter_vibration
      to: 'on'
      for:
        minutes: 3
    action:
      service: homeassistant.turn_on
      entity_id: input_boolean.dryer_switch

  - alias: dryer done
    trigger:
      - platform: state
        entity_id: binary_sensor.spotter_vibration
        to: 'off'
        for:
          minutes: 2
    condition:
      condition: state
      entity_id: input_boolean.dryer_switch
      state: 'on'
    action:
      - service: homeassistant.turn_off
        entity_id: input_boolean.dryer_switch
      - service: notify.sms_billy
        data:
          message: >
            Dryer is done!

  - alias: notify of bathroom sink leak
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_sink_liquid_detected
        to: 'on'
    action:
      - service: notify.sms_billy
        data:
          message: >
            The bathroom sink is leaking!!!

  - alias: power is out
    trigger:
      - platform: state
        entity_id: binary_sensor.ups_online_status
        to: 'off'
    action:
      - service: notify.sms_billy
        data:
          message: >
            Power is out, running on battery.

  - alias: power back on
    trigger:
      - platform: state
        entity_id: binary_sensor.ups_online_status
        from: 'off'
        to: 'on'
    action:
      - service: notify.sms_billy
        data:
          message: >
            Power is back on!

  - alias: turn on office ac
    trigger:
      - platform: state
        entity_id: binary_sensor.office_temp_high_threshold
        to: 'on'
        for:
          minutes: 20
    action:
      service: homeassistant.turn_on
      entity_id: switch.office_air_conditioner

  - alias: turn off office ac
    trigger:
      - platform: state
        entity_id: binary_sensor.office_temp_low_threshold
        to: 'on'
        for:
          minutes: 20
    action:
      service: homeassistant.turn_off
      entity_id: switch.office_air_conditioner

  - alias: check freezer
    trigger:
      - platform: state
        entity_id: binary_sensor.freezer_temp_threshold
        to: 'on'
        for:
          minutes: 15
    action:
      - service: notify.sms_billy
        data:
          message: >
            Check the freezer! {{ states('sensor.garage_freezer_temperature') }}

  - alias: laundry light on when door opens
    trigger:
      - platform: state
        entity_id: binary_sensor.laundry_door_opened
        from: 'off'
        to: 'on'
    action:
      service: homeassistant.turn_on
      entity_id: light.laundry

  - alias: turn outside lights on when door opens
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door_opened
        from: 'off'
        to: 'on'
    condition:
      - condition: template
        value_template: '{{ states.sun.sun.attributes.elevation < 1.5 }}'
    action:
      service: homeassistant.turn_on
      entity_id: switch.outside_lights

  - alias: laundry light off when door closes
    trigger:
      - platform: state
        entity_id: binary_sensor.laundry_door_opened
        to: 'off'
    action:
      service: homeassistant.turn_off
      entity_id: light.laundry

  - alias: printing done
    trigger:
      - platform: state
        entity_id: binary_sensor.octoprint_printing
        from: "on"
        to: "off"
    action:
      service: notify.sms_billy
      data:
        message: 'Printing done!'

  - alias: office lights on when door opens
    trigger:
      - platform: state
        entity_id: binary_sensor.office_door_opened
        from: 'off'
        to: 'on'
    action:
      - service: light.turn_on
        entity_id: light.office_lamp
      - service: homeassistant.turn_on
        entity_id: switch.power_strip

  - alias: bedroom lights on when door opens
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_door_opened
        from: 'off'
        to: 'on'
    action:
      service: homeassistant.turn_on
      entity_id: group.bedroom_lights

  - alias: lock front door when door closed
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door_opened
        to: 'off'
    action:
      service: homeassistant.turn_on
      entity_id: script.lock_the_door

  - alias: garage light on if door open
    trigger:
      - platform: state
        entity_id: binary_sensor.garage_entry_door_opened
        to: 'on'
    condition:
      - condition: template
        value_template: '{{ states.sun.sun.attributes.elevation < 4.0 }}'
    action:
      service: homeassistant.turn_on
      entity_id: group.garage_lights

  - alias: enable downstairs hall light delayed off script
    trigger:
      - platform: state
        entity_id: light.down_stairs_hallway
        to: 'on'
    action:
      service: homeassistant.turn_on
      entity_id: script.hall_light

  - alias: under bed light on if up in morning
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: group.bedroom_lights
          state: 'off'
        - condition: time
          before: '07:00:00'
    action:
      service: homeassistant.turn_on
      entity_id: script.under_bed_light

  - alias: under bed light on if up at night
    trigger:
      - platform: state
        entity_id: binary_sensor.bedroom_motion
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '22:00:00'
        - condition: state
          entity_id: group.bedroom_lights
          state: 'off'
    action:
      service: homeassistant.turn_on
      entity_id: script.under_bed_light

  # - alias: notify turtle tank water is too cold
  #   trigger:
  #     - platform: numeric_state
  #       entity_id: sensor.tank_water
  #       below: 23
  #   action:
  #     - service: notify.sms_billy
  #       data:
  #         message: >
  #           Tank water too cold! {{ states('sensor.tank_water') }}

  # - alias: notify turtle tank bulb has burned out
  #   trigger:
  #     - platform: state
  #       entity_id: binary_sensor.tank_basking_threshold
  #       to: 'on'
  #       for:
  #         minutes: 45
  #   action:
  #     - service: notify.sms_billy
  #       data:
  #         message: >
  #           Check basking bulbs! {{ states('sensor.turtle_tank_basking') }}

  - alias: notify uvb bulb needs changed
    trigger:
      - platform: numeric_state
        entity_id: sensor.tank_uvb
        below: 10
    action:
      service: notify.sms_billy
      data:
        message: >
          UVB output too low! Replace bulb {{ states('sensor.tank_uvb') }}

  - alias: billy unlocked the door close garage
    trigger:
      - platform: state
        entity_id: binary_sensor.billy
        to: 'on'
    condition:
      - condition: state
        entity_id: cover.garage_door
        state: 'open'
    action:
      - service: cover.close_cover
        entity_id: cover.garage_door

  - alias: notify that billy unlocked the door
    trigger:
      - platform: state
        entity_id: binary_sensor.billy
        to: 'on'
    condition:
      - condition: state
        entity_id: lock.front_door
        state: locked
        for:
          minutes: 15
    action:
      - service: notify.ios_melinas_iphone
        data:
          message: 'Billy unlocked the door'

  - alias: melina unlocked the door
    trigger:
      - platform: state
        entity_id: binary_sensor.melina
        to: 'on'
    condition:
      - condition: state
        entity_id: lock.front_door
        state: locked
        for:
          minutes: 15
    action:
      - service: notify.sms_billy
        data:
          message: 'Melina unlocked the door'

  - alias: notify that gdottie unlocked the door
    trigger:
      - platform: state
        entity_id: binary_sensor.gdottie
        to: 'on'
    action:
      - service: notify.sms_billy
        data:
          message: 'Grandma unlocked the door'
      - service: notify.ios_melinas_iphone
        data:
          message: 'Grandma unlocked the door'

  - alias: notify that mother unlocked the door
    trigger:
      - platform: state
        entity_id: binary_sensor.parents
        to: 'on'
    action:
      - service: notify.sms_billy
        data:
          message: 'Mother unlocked the door'

##########################################
##############Tasker Automations################
##########################################

  - alias: trigger good night script when phone is plugged in
    trigger:
      - platform: event
        event_type: good_night
    action:
      - service: homeassistant.turn_on
        entity_id: script.good_night

  - alias: notify that door is open
    trigger:
      - platform: event
        event_type: good_night
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: group.external_doors
          state: 'on'
    action:
      - service: notify.sms_billy
        data:
          message: 'There is a door open.'
      - service: notify.sms_billy
        data:
          message: 'There is a door open.'

  - alias: trigger good morning script when phone is unplugged
    trigger:
      - platform: event
        event_type: good_morning
    action:
      service: homeassistant.turn_on
      entity_id: script.good_morning

##########################################
##############Dasher Automations##########
##########################################

  - alias: garage door open
    trigger:
      - platform: event
        event_type: toggle_garage_door
    condition:
      - condition: state
        entity_id: cover.garage_door
        state: 'closed'
    action:
      service: cover.open_cover
      entity_id: cover.garage_door

  - alias: garage door close
    trigger:
      - platform: event
        event_type: toggle_garage_door
    condition:
      - condition: state
        entity_id: cover.garage_door
        state: 'open'
    action:
      service: cover.close_cover
      entity_id: cover.garage_door

  - alias: kitchen sink light off
    trigger:
      - platform: event
        event_type: toggle_kitchen_sink_light
    condition:
      - condition: state
        entity_id: light.kitchen_sink_light
        state: 'on'
    action:
      service: homeassistant.turn_off
      entity_id: light.kitchen_sink_light

  - alias: kitchen sink light on
    trigger:
      - platform: event
        event_type: toggle_kitchen_sink_light
    condition:
      - condition: state
        entity_id: light.kitchen_sink_light
        state: 'off'
    action:
      service: homeassistant.turn_on
      entity_id: light.kitchen_sink_light

  - alias: outside off
    trigger:
      - platform: event
        event_type: toggle_outside_lights
      - platform: event
        event_type: outside_off
    condition:
      - condition: state
        entity_id: group.entryway
        state: 'on'
    action:
      service: homeassistant.turn_off
      entity_id: group.entryway

  - alias: outside on
    trigger:
      - platform: event
        event_type: toggle_outside_lights
      - platform: event
        event_type: outside_on
    condition:
      - condition: state
        entity_id: group.entryway
        state: 'off'
    action:
      service: homeassistant.turn_on
      entity_id: group.entryway

  - alias: bedroom off
    trigger:
      - platform: event
        event_type: toggle_bedroom_light
      - platform: event
        event_type: beroom_off
    condition:
      - condition: state
        entity_id: group.bedroom_lights
        state: 'on'
    action:
      service: homeassistant.turn_off
      entity_id: group.bedroom_lights

  - alias: bedroom on day
    trigger:
      - platform: event
        event_type: toggle_bedroom_light
      - platform: event
        event_type: bedroom_on
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: group.bedroom_lights
          state: 'off'
        - condition: time
          before: '21:00:00'
    action:
      service: homeassistant.turn_on
      entity_id: script.bedroom_lights_on_day

  - alias: bedroom on night
    trigger:
      - platform: event
        event_type: toggle_bedroom_light
      - platform: event
        event_type: bedroom_on
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: group.bedroom_lights
          state: 'off'
        - condition: time
          after: '21:00:00'
    action:
      service: homeassistant.turn_on
      entity_id: script.bedroom_lights_on_night

  - alias: kitchen cabinet lights off
    trigger:
      - platform: event
        event_type: toggle_kitchen_cabinet_lights
      - platform: event
        event_type: kitchen_off
    condition:
      - condition: state
        entity_id: switch.kitchen_cabinet_lights
        state: 'on'
    action:
      service: homeassistant.turn_off
      entity_id: switch.kitchen_cabinet_lights

  - alias: kitchen cabinet lights on
    trigger:
      - platform: event
        event_type: toggle_kitchen_cabinet_lights
      - platform: event
        event_type: kitchen_on
    condition:
      - condition: state
        entity_id: switch.kitchen_cabinet_lights
        state: 'off'
    action:
      service: homeassistant.turn_on
      entity_id: switch.kitchen_cabinet_lights

  - alias: downstairs hallway off
    trigger:
      - platform: event
        event_type: toggle_hallway_light
    condition:
      - condition: state
        entity_id: light.down_stairs_hallway
        state: 'on'
    action:
      service: homeassistant.turn_off
      entity_id: light.down_stairs_hallway

  - alias: downstairs hallway on
    trigger:
      - platform: event
        event_type: toggle_hallway_light
    condition:
      - condition: state
        entity_id: light.down_stairs_hallway
        state: 'off'
    action:
      service: homeassistant.turn_on
      entity_id: light.down_stairs_hallway

####################################
###Device Tracker Automations#######
####################################

  - alias: disable home automations for 15 minutes after we leave
    trigger:
      - platform: state
        entity_id: group.us
        to: 'not_home'
    action:
      - service: automation.turn_off
        entity_id: automation.someone_is_home_set_climate_auto
      - service: automation.turn_off
        entity_id: automation.someone_is_home_set_climate_winter
      - service: automation.turn_off
        entity_id: automation.someone_is_home_set_climate_summer
      - service: automation.turn_off
        entity_id: automation.turn_outside_lights_on_when_someone_is_home
      - service: automation.turn_off
        entity_id: automation.turn_entry_and_living_room_on_when_someone_gets_home

  - alias: enable home automations after 15 minutes of being away
    trigger:
      - platform: state
        entity_id: group.us
        to: 'not_home'
        for:
          minutes: 15
    action:
      - service: automation.turn_on
        entity_id: automation.someone_is_home_set_climate_auto
      - service: automation.turn_on
        entity_id: automation.someone_is_home_set_climate_winter
      - service: automation.turn_on
        entity_id: automation.someone_is_home_set_climate_summer
      - service: automation.turn_on
        entity_id: automation.turn_outside_lights_on_when_someone_is_home
      - service: automation.turn_on
        entity_id: automation.turn_entry_and_living_room_on_when_someone_gets_home

  - alias: disable home automations for 15 minutes after billy leaves
    trigger:
      - platform: state
        entity_id: device_tracker.w1ll1am_oneplus5t
        to: 'not_home'
    action:
      - service: automation.turn_off
        entity_id: automation.billy_is_home
      - service: automation.turn_off
        entity_id: automation.billy_is_home_open_garage

  - alias: enable home automations after 15 minutes of billy being away
    trigger:
      - platform: state
        entity_id: device_tracker.w1ll1am_oneplus5t
        to: 'not_home'
        for:
          minutes: 15
    action:
      - service: automation.turn_on
        entity_id: automation.billy_is_home
      - service: automation.turn_on
        entity_id: automation.billy_is_home_open_garage

  - alias: disable home automations for 15 minutes after melina leaves
    trigger:
      - platform: state
        entity_id: device_tracker.melinas_iphone
        to: 'not_home'
    action:
      - service: automation.turn_off
        entity_id: automation.melina_is_home
      - service: automation.turn_off
        entity_id: automation.ios_unlock_door_notification

  - alias: enable home automations after 15 minutes of melina being away
    trigger:
      - platform: state
        entity_id: device_tracker.melinas_iphone
        to: 'not_home'
        for:
          minutes: 15
    action:
      - service: automation.turn_on
        entity_id: automation.melina_is_home
      - service: automation.turn_off
        entity_id: automation.ios_unlock_door_notification

  - alias: both not home set climate auto
    trigger:
      - platform: state
        entity_id: group.us
        to: 'not_home'
        for:
          minutes: 30
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ states.climate.thermostat.state == "auto" }}'
    action:
      - service: climate.set_temperature
        entity_id: climate.thermostat
        data:
          target_temp_high: 73
          target_temp_low: 67

  - alias: someone is home set climate auto
    trigger:
      - platform: state
        entity_id: group.us
        to: 'home'
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ states.climate.thermostat.state == "auto" }}'
        - condition: template
          value_template: '{{ states.climate.thermostat.attributes.target_temp_low != 69 }}'
        - condition: template
          value_template: '{{ states.climate.thermostat.attributes.target_temp_high != 71 }}'
    action:
      - service: climate.set_temperature
        entity_id: climate.thermostat
        data:
          target_temp_high: 71
          target_temp_low: 69

  - alias: both not home set climate winter
    trigger:
      - platform: state
        entity_id: group.us
        to: 'not_home'
        for:
          minutes: 30
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ states.climate.thermostat.state == "heat" }}'
    action:
      - service: climate.set_temperature
        entity_id: climate.thermostat
        data:
          temperature: 67

  - alias: both not home set climate summer
    trigger:
      - platform: state
        entity_id: group.us
        to: 'not_home'
        for:
          minutes: 30
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: sensor.season
          state: 'Summer'
        - condition: template
          value_template: '{{ states.climate.thermostat.state == "cool" }}'
        - condition: template
          value_template: '{{ states.climate.thermostat.attributes.target_temp_high != 73 }}'
    action:
      - service: climate.set_temperature
        entity_id: climate.thermostat
        data:
          temperature: 73

  - alias: someone is home set climate winter
    trigger:
      - platform: state
        entity_id: group.us
        to: 'home'
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ states.climate.thermostat.state == "heat" }}'
        - condition: template
          value_template: '{{ states.climate.thermostat.attributes.target_temp_low != 70 }}'
    action:
      - service: climate.set_temperature
        entity_id: climate.thermostat
        data:
          temperature: 70

  - alias: someone is home set climate summer
    trigger:
      - platform: state
        entity_id: group.us
        to: 'home'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: sensor.season
          state: 'Summer'
        - condition: template
          value_template: '{{ states.climate.thermostat.state == "cool" }}'
        - condition: template
          value_template: '{{ states.climate.thermostat.attributes.target_temp_high != 71 }}'
    action:
      - service: climate.set_temperature
        entity_id: climate.thermostat
        data:
          temperature: 71

  - alias: left home lock door
    trigger:
      - platform: state
        entity_id: group.us
        from: 'home'
        to: 'not_home'
    condition:
      - condition: state
        entity_id: lock.front_door
        state: 'unlocked'
    action:
      - service: homeassistant.turn_on
        entity_id: script.lock_the_door
      - service: homeassistant.turn_off
        entity_id: group.every_light

  - alias: left home turn off lights
    trigger:
      - platform: state
        entity_id: group.us
        from: 'home'
        to: 'not_home'
        for:
          minutes: 5
    action:
      - service: homeassistant.turn_off
        entity_id: group.every_light


  # - alias: billy left home
  #   trigger:
  #     - platform: state
  #       entity_id: device_tracker.w1ll1am_oneplus5t
  #       from: 'home'
  #       to: 'not_home'
  #   condition:
  #     - condition: state
  #       entity_id: device_tracker.melinas_iphone
  #       state: 'not_home'
  #   action:


  # - alias: melina left home
  #   trigger:
  #     - platform: state
  #       entity_id: device_tracker.melinas_iphone
  #       from: 'home'
  #       to: 'not_home'
  #   condition:
  #     - condition: state
  #       entity_id: device_tracker.w1ll1am_oneplus5t
  #       state: 'not_home'
  #   action:
  #     - service: homeassistant.turn_off
  #       entity_id: group.every_light

  - alias: billy at ktown
    trigger:
      - platform: state
        entity_id: device_tracker.w1ll1am_oneplus5t
        from: 'not_home'
        to: 'Ktown'
    condition:
      - condition: numeric_state
        entity_id: sensor.egg_minder
        below: 4
    action:
      service: notify.sms_billy
      data:
        message: >
          {% if states('sensor.egg_minder') | float < 4 %}
            Get eggs! Only {{ states('sensor.egg_minder') }} eggs left.
          {%endif %}

  - alias: melina at ktown
    trigger:
      - platform: state
        entity_id: device_tracker.melinas_iphone
        from: 'not_home'
        to: 'Ktown'
    condition:
      - condition: numeric_state
        entity_id: sensor.egg_minder
        below: 4
    action:
      service: notify.ios_melinas_iphone
      data:
        message: >
          {% if states('sensor.egg_minder') | float < 4 %}
            Get eggs! Only {{ states('sensor.egg_minder') }} eggs left.
          {%endif %}

  - alias: melina is home
    trigger:
      - platform: state
        entity_id: device_tracker.melinas_iphone
        from: 'not_home'
        to: 'home'
    condition:
      condition: state
      entity_id: script.hass_start
      state: 'off'
    action:
      - service: notify.sms_billy
        data:
          message: 'Melina is home'

  - alias: melina is at her away home
    trigger:
      - platform: state
        entity_id: device_tracker.melinas_iphone
        from: 'not_home'
        to: 'Home away from Home'
    condition:
      condition: state
      entity_id: script.hass_start
      state: 'off'
    action:
      - service: notify.sms_billy
        data:
          message: 'Melina is at her away home'

  - alias: billy is home open garage
    trigger:
      - platform: state
        entity_id: device_tracker.w1ll1am_oneplus5t
        from: 'not_home'
        to: 'home'
    condition:
        condition: and
        conditions:
          - condition: state
            entity_id: input_boolean.on_vacation
            state: 'off'
          - condition: state
            entity_id: binary_sensor.workday_sensor
            state: 'on'
          - condition: time
            after: '13:00:00'
          - condition: time
            before: '18:00:00'
          - condition: state
            entity_id: cover.garage_door
            state: 'closed'
            for:
                hours: 7
    action:
      - service: cover.open_cover
        data:
          entity_id: cover.garage_door
      - service: notify.sms_billy
        data:
          message: >
            Opening the garage automatically! Woot!

  - alias: billy is home
    trigger:
      - platform: state
        entity_id: device_tracker.w1ll1am_oneplus5t
        from: 'not_home'
        to: 'home'
    condition:
      condition: state
      entity_id: script.hass_start
      state: 'off'
    action:
      - service: homeassistant.turn_off
        entity_id: automation.billy_is_home
      - service: homeassistant.turn_off
        entity_id: automation.billy_is_home
      - service: notify.ios_melinas_iphone
        data:
          message: 'Billy is home'

  - alias: turn outside lights on when someone is home
    trigger:
      - platform: state
        entity_id: device_tracker.melinas_iphone
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: binary_sensor.melina
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: device_tracker.w1ll1am_oneplus5t
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: binary_sensor.billy
        from: 'off'
        to: 'on'
    condition:
        condition: and
        conditions:
          - condition: template
            value_template: '{{ states.sun.sun.attributes.elevation < 2.0 }}'
    action:
        service: homeassistant.turn_on
        entity_id: group.entryway

  - alias: turn entry and living room on when someone gets home
    trigger:
      - platform: state
        entity_id: device_tracker.melinas_iphone
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: binary_sensor.melina
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: device_tracker.w1ll1am_oneplus5t
        from: 'not_home'
        to: 'home'
      - platform: state
        entity_id: binary_sensor.billy
        from: 'off'
        to: 'on'
    condition:
        condition: and
        conditions:
          - condition: template
            value_template: '{{ states.sun.sun.attributes.elevation < 4.0 }}'
    action:
        service: homeassistant.turn_on
        entity_id: script.home_at_dusk

###################################
############Alarm Automations###########
##################################

  - alias: trigger alarm while armed home
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door_opened
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: binary_sensor.garage_entry_door_opened
        from: 'off'
        to: 'on'
    condition:
        - condition: state
          entity_id: alarm_control_panel.ha_alarm
          state: armed_home
    action:
        service: homeassistant.turn_on
        entity_id: script.alarm_home

  - alias: trigger alarm while armed away
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door_opened
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: binary_sensor.garage_entry_door_opened
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: binary_sensor.living_room_motion
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: binary_sensor.up_stairs_hallway_motion
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: binary_sensor.down_stairs_bathroom_door_opened
        from: 'off'
        to: 'on'
      - platform: state
        entity_id: binary_sensor.office_door_opened
        from: 'off'
        to: 'on'
    condition:
        - condition: state
          entity_id: alarm_control_panel.ha_alarm
          state: armed_away
    action:
        service: homeassistant.turn_on
        entity_id: script.alarm_away

  - alias: arm alarm
    trigger:
      - platform: event
        event_type: arm_away
    action:
        service: alarm_control_panel.alarm_arm_away
        entity_id: alarm_control_panel.ha_alarm

  - alias: trigger alarm notification
    trigger:
      - platform: event
        event_type: alarm_triggered
    #condition:
    #  - condition: state
    #    entity_id: switch.siren
    #    state: 'on'
    action:
      - service: notify.sms_billy
        data:
          message: 'Intruder detected!'
      - service: notify.ios_melinas_iphone
        data:
          message: 'Intruder detected!'

  - alias: fire alert
    trigger:
      - platform: state
        entity_id: binary_sensor.kidde_smoke_detector_smoke_detected
        to: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: group.every_light
      - service: notify.sms_billy
        data:
          message: 'Smoke detected!'
      - service: notify.ios_melinas_iphone
        data:
          message: 'Smoke detected!'

  - alias: co alert
    trigger:
      - platform: state
        entity_id: binary_sensor.kidde_smoke_detector_co_detected
        to: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: group.every_light
      - service: notify.sms_billy
        data:
          message: 'Carbon Monoxide detected!'
      - service: notify.ios_melinas_iphone
        data:
          message: 'Carbon Monoxide detected!'

  - alias: code unlock disable alarm
    trigger:
      - platform: state
        entity_id: binary_sensor.billy
        to: 'on'
      - platform: state
        entity_id: binary_sensor.melina
        to: 'on'
      - platform: state
        entity_id: binary_sensor.gdottie
        to: 'on'
      - platform: state
        entity_id: binary_sensor.parents
        to: 'on'
    action:
      - service: alarm_control_panel.alarm_disarm
        entity_id: alarm_control_panel.ha_alarm

#######################################
###########Random Event Automations##########
#######################################

  - alias: turn billy is home back on
    trigger:
      - platform: state
        entity_id: automation.billy_is_home
        to: 'off'
        for:
          minutes: 30
    action:
      - service: homeassistant.turn_on
        entity_id: automation.billy_is_home

  - alias: sound bar off when chromecast is off
    trigger:
      - platform: state
        entity_id: media_player.living_room
        to: 'off'
    action:
      - service: homeassistant.turn_off
        entity_id: switch.living_room_soundbar_power

  - alias: sound bar on when chromecast starts playing
    trigger:
      - platform: state
        entity_id: media_player.living_room
        to: 'playing'
        from: 'off'
    action:
      - service: homeassistant.turn_on
        entity_id: switch.soundbar_volume

  - alias: check for locked lock
    trigger:
      - platform: event
        event_type: check_for_locked_lock
    condition:
        condition: or
        conditions:
          - condition: state
            entity_id: lock.front_door
            state: 'unlocked'
          - condition: state
            entity_id: binary_sensor.front_door
            state: 'on'
    action:
      - service: notify.sms_billy
        data:
          message: 'Front door failed to lock!'
      - service: notify.ios_melinas_iphone
        data:
          message: 'Front door failed to lock!'

  - alias: tamper alert
    trigger:
      - platform: template
        value_template: "{{ is_state_attr('binary_sensor.front_door_opened', 'tamper_detected', True) }}"
      - platform: template
        value_template: "{{ is_state_attr('binary_sensor.bathroom_door_opened', 'tamper_detected', True) }}"
      - platform: template
        value_template: "{{ is_state_attr('binary_sensor.garage_entry_door_opened', 'tamper_detected', True) }}"
      - platform: template
        value_template: "{{ is_state_attr('binary_sensor.bedroom_door_opened', 'tamper_detected', True) }}"
      - platform: template
        value_template: "{{ is_state_attr('binary_sensor.office_door_opened', 'tamper_detected', True) }}"
      - platform: template
        value_template: "{{ is_state_attr('binary_sensor.laundry_door_opened', 'tamper_detected', True) }}"
      - platform: template
        value_template: "{{ is_state_attr('binary_sensor.living_room_motion', 'tamper_detected', True) }}"
      - platform: template
        value_template: "{{ is_state_attr('binary_sensor.up_stairs_hallway_motion', 'tamper_detected', True) }}"
      - platform: template
        value_template: "{{ is_state_attr('binary_sensor.stairs_motion', 'tamper_detected', True) }}"
    action:
      - service: notify.sms_billy
        data_template:
          message: >
            {{ trigger.entity_id.split('.')[1].replace('_',' ') }} sensor tamper detected!
      - service: persistent_notification.create
        data_template:
          title: Tamper detected
          message: >
            {{ trigger.entity_id.split('.')[1].replace('_',' ') }} sensor tamper detected!

  - alias: battery low alert
    trigger:
      - platform: template
        value_template: "{{ states.wink.siren.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.sensor.egg_minder.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.binary_sensor.front_door_opened.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.binary_sensor.bathroom_door_opened.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.binary_sensor.garage_entry_door_opened.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.binary_sensor.bedroom_door_opened.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.binary_sensor.office_door_opened.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.binary_sensor.laundry_door_opened.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.binary_sensor.bathroom_liquid_detected.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.binary_sensor.living_room_motion.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.binary_sensor.up_stairs_hallway_motion.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.binary_sensor.stairs_motion.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.binary_sensor.kidde_smoke_detector_co_detected.attributes.battery_level | float < 40 }}"
      - platform: template
        value_template: "{{ states.lock.front_door.attributes.battery_level | float < 40 }}"
    action:
      - service: notify.sms_billy
        data_template:
          message: >
            Change the {{ trigger.entity_id.split('.')[1].replace('_',' ') }} battery
      - service: persistent_notification.create
        data_template:
          title: Low Battery
          message: >
            Change the {{ trigger.entity_id.split('.')[1].replace('_',' ') }} battery

  - alias: locking the door stops the auto lock script
    trigger:
      - platform: state
        entity_id: lock.front_door
        from: 'unlocked'
        to: 'locked'
    condition:
      - condition: state
        entity_id: binary_sensor.front_door_opened
        state: 'off'
    action:
      service: homeassistant.turn_off
      entity_id: script.lock_the_door

  - alias: home assistant started
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: homeassistant.turn_on
        entity_id: script.hass_start
      - service: notify.sms_billy
        data:
          message: "Home Assistant started"

  - alias: notify that a device is offline
    trigger:
      - platform: state
        entity_id: binary_sensor.water_liquid_detected
        to: 'unavailable'
      - platform: state
        entity_id: lock.front_door
        to: 'unavailable'
      - platform: state
        entity_id: binary_sensor.hub
        to: 'unavailable'
      - platform: state
        entity_id: binary_sensor.front_door_opened
        to: 'unavailable'
      - platform: state
        entity_id: binary_sensor.garage_entry_door_opened
        to: 'unavailable'
      - platform: state
        entity_id: sensor.tank_uvb
        to: 'unavailable'
      - platform: state
        entity_id: sensor.tank_basking
        to: 'unavailable'
      - platform: state
        entity_id: sensor.tank_water
        to: 'unavailable'
      - platform: state
        entity_id: sensor.freezer_temperature
        to: 'unavailable'
      - platform: template
        value_template: "{{ not states.sensor.garage_freezer_temperature }}"
      - platform: state
        entity_id: switch.turtle
        to: 'unavailable'
      # - platform: template
      #   value_template: "{{ not states.sensor.turtle_tank_water }}"
    action:
      service: notify.sms_billy
      data_template:
        message: >
          {{ trigger.entity_id.split('.')[1] }} is offline.

  - alias: notify that there is a wink hub update
    trigger:
      - platform: template
        value_template: "{{ is_state_attr('binary_sensor.hub', 'update_needed', True) }}"
      - platform: template
        value_template: "{{ is_state_attr('binary_sensor.wink_relay_downstairs', 'update_needed', True) }}"
      - platform: template
        value_template: "{{ is_state_attr('binary_sensor.wink_relay_upstairs', 'update_needed', True) }}"
    action:
      service: notify.sms_billy
      data_template:
        message: >
          There is a Wink {{ trigger.entity_id.split('.')[1] }} update available!

  - alias: notify that there is a wink api issue feed
    trigger:
      - platform: event
        event_type: feedreader
    action:
      service: notify.sms_billy
      data_template:
        message: "{{ trigger.event.data.title }}"

##################################
##############iOS#################
##################################

  - alias: iOS unlock door notification
    trigger:
      platform: state
      entity_id: device_tracker.melinas_iphone
      to: 'home'
    action:
      service: notify.ios_melinas_iphone
      data:
        message: "Unlock the door?"
        data:
          push:
            category: "LOCK"


  - alias: iOS unlock door from event
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: UNLOCK_DOOR
    action:
      service: lock.unlock
      entity_id: lock.front_door


################################
#########Camera stuff###########
###############################

  - alias: camera default
    trigger:
      platform: state
      entity_id: input_select.camera_mode
      to: 'Default'
    action:
      service: homeassistant.turn_on
      entity_id: switch.camera

  - alias: camera off
    trigger:
      platform: state
      entity_id: input_select.camera_mode
      to: 'Off'
    action:
      service: homeassistant.turn_off
      entity_id: switch.camera

  - alias: camera to door
    trigger:
      platform: state
      entity_id: input_select.camera_mode
      to: 'Door'
    action:
      service: homeassistant.turn_on
      entity_id: switch.door

  - alias: camera to dog
    trigger:
      platform: state
      entity_id: input_select.camera_mode
      to: 'Dog'
    action:
      service: homeassistant.turn_on
      entity_id: switch.dog

  - alias: camera snapshot
    trigger:
      platform: state
      entity_id: input_select.camera_mode
      to: 'Snapshot'
    action:
      service: homeassistant.turn_on
      entity_id: switch.snapshot

  - alias: camera reboot
    trigger:
      platform: state
      entity_id: input_select.camera_mode
      to: 'Reboot'
    action:
      service: homeassistant.turn_on
      entity_id: switch.reboot

  - alias: reboot camera for calibration
    trigger:
      - platform: time
        at: '00:01:00'
    action:
      - service: homeassistant.turn_on
        entity_id: switch.reboot
